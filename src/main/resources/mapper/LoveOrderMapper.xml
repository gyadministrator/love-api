<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gy.love.loveapi.mapper.LoveOrderMapper" >
  <resultMap id="BaseResultMap" type="com.gy.love.loveapi.entity.LoveOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="express_id" property="expressId" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, product_id, express_id, date, address, number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from love_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByUserId" resultType="com.gy.love.loveapi.entity.LoveOrder" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List"/>
   from love_order
   where user_id = #{userId,jdbcType=INTEGER}</select>
  <select id="findAllByPage" parameterType="com.gy.love.loveapi.entity.Page" resultType="com.gy.love.loveapi.entity.LoveOrder">
    select <include refid="Base_Column_List"></include>
    from love_order
    where ${column} like concat('%',#{keyword},'%')
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from love_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gy.love.loveapi.entity.LoveOrder" >
    insert into love_order (id, user_id, product_id, 
      express_id, date, address, 
      number)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{expressId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gy.love.loveapi.entity.LoveOrder" >
    insert into love_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="expressId != null" >
        express_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="expressId != null" >
        #{expressId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gy.love.loveapi.entity.LoveOrder" >
    update love_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="expressId != null" >
        express_id = #{expressId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gy.love.loveapi.entity.LoveOrder" >
    update love_order
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      express_id = #{expressId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>