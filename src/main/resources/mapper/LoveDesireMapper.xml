<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gy.love.loveapi.mapper.LoveDesireMapper" >
  <resultMap id="BaseResultMap" type="com.gy.love.loveapi.entity.LoveDesire" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="titile" property="titile" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="REAL" />
    <result column="is_public" property="isPublic" jdbcType="TINYINT" />
    <result column="is_success" property="isSuccess" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, end_date, titile, content, money, is_public, is_success
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from love_desire
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from love_desire
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gy.love.loveapi.entity.LoveDesire" >
    insert into love_desire (id, user_id, end_date, 
      titile, content, money, 
      is_public, is_success)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{endDate,jdbcType=TIMESTAMP}, 
      #{titile,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{money,jdbcType=REAL}, 
      #{isPublic,jdbcType=TINYINT}, #{isSuccess,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.gy.love.loveapi.entity.LoveDesire" >
    insert into love_desire
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="titile != null" >
        titile,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="isPublic != null" >
        is_public,
      </if>
      <if test="isSuccess != null" >
        is_success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="titile != null" >
        #{titile,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=REAL},
      </if>
      <if test="isPublic != null" >
        #{isPublic,jdbcType=TINYINT},
      </if>
      <if test="isSuccess != null" >
        #{isSuccess,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gy.love.loveapi.entity.LoveDesire" >
    update love_desire
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="titile != null" >
        titile = #{titile,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=REAL},
      </if>
      <if test="isPublic != null" >
        is_public = #{isPublic,jdbcType=TINYINT},
      </if>
      <if test="isSuccess != null" >
        is_success = #{isSuccess,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gy.love.loveapi.entity.LoveDesire" >
    update love_desire
    set user_id = #{userId,jdbcType=INTEGER},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      titile = #{titile,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      money = #{money,jdbcType=REAL},
      is_public = #{isPublic,jdbcType=TINYINT},
      is_success = #{isSuccess,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>